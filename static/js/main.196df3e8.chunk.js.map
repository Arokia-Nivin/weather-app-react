{"version":3,"sources":["reducers/index.js","reducers/weatherDataReducer.js","components/SearchBox.js","actions/index.js","components/Weather.js","components/App.js","index.js"],"names":["rootReducers","combineReducers","weatherData","state","action","type","payload","SearchBox","props","PlaceChangedListener","autocomplete","addListener","placeName","getPlace","formatted_address","setState","indexOfComma","indexOf","slice","fetchWeatherData","then","handleOnChange","evt","target","name","value","handleOnSubmit","preventDefault","placeNameAutoComplete","window","google","maps","places","Autocomplete","this","refs","SearchBoxInput","setFields","icon","className","onSubmit","htmlFor","id","ref","placeholder","onChange","Component","connect","dispatch","a","axios","get","params","q","appid","units","res","data","main","weather","wind","alert","Weather","displayData","Object","keys","length","constructor","iconurl","src","alt","temp","description","humidity","speed","pressure","deg","App","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.196df3e8.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { weatherDataReducer } from \"./weatherDataReducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n    weatherData: weatherDataReducer\r\n});\r\n\r\nexport default rootReducers;\r\n","export const weatherDataReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_WEATHER_DATA\":\r\n      return { ...action.payload };\r\n    default:\r\n      return state; \r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchWeatherData } from \"../actions/\";\r\nimport \"../styles/SearchBox.css\";\r\nclass SearchBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { placeName: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const placeNameAutoComplete = new window.google.maps.places.Autocomplete(\r\n      this.refs.SearchBoxInput,\r\n    );\r\n    placeNameAutoComplete.setFields([\"formatted_address\"]);\r\n    this.PlaceChangedListener(placeNameAutoComplete);\r\n  }\r\n\r\n  PlaceChangedListener = (autocomplete) => {\r\n    autocomplete.addListener(\"place_changed\", () => {\r\n      let placeName = autocomplete.getPlace().formatted_address;\r\n      if (!placeName) {\r\n        this.setState(() => ({ placeName: \"\" }));\r\n        this.props.fetchWeatherData(\"\");\r\n      } else {\r\n        this.setState(() => ({ placeName }));\r\n        let indexOfComma = placeName.indexOf(\",\");\r\n        placeName = placeName.slice(0, indexOfComma);\r\n        this.props.fetchWeatherData(placeName).then(() => {\r\n          this.setState(() => ({ placeName: \"\" }));\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleOnChange = (evt) => {\r\n    this.setState(() => ({ [evt.target.name]: evt.target.value }));\r\n  };\r\n\r\n  handleOnSubmit = (evt) => {\r\n    evt.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const icon = <i className='fas fa-search'></i>;\r\n    return (\r\n      <form onSubmit={this.handleOnSubmit}>\r\n        <div className='form-group row'>\r\n          <label\r\n            className='SearchBox-input-label col-sm-3 col-form-label font-weight-bold'\r\n            htmlFor='SearchBox-input'>\r\n            City Name: {icon}\r\n          </label>\r\n          <div className='col-sm-9'>\r\n            <input\r\n              type='text'\r\n              name='placeName'\r\n              id='SearchBox-input'\r\n              ref='SearchBoxInput'\r\n              placeholder='Enter Your City Name'\r\n              className='form-control'\r\n              value={this.state.placeName}\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { fetchWeatherData })(SearchBox);\r\n","import axios from \"axios\";\r\nexport const fetchWeatherData = (placeName = \"\") => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      \"https://api.openweathermap.org/data/2.5/weather\",\r\n      {\r\n        params: {\r\n          q: placeName,\r\n          appid: \"2f662e3cc2306047524dd030b5222fdf\",\r\n          units: \"metric\",\r\n        },\r\n      },\r\n    );\r\n    const { main, weather, name, wind } = res.data;\r\n    const action = {\r\n      main,\r\n      weather,\r\n      name,\r\n      wind,\r\n    };\r\n    dispatch({ type: \"FETCH_WEATHER_DATA\", payload: action });\r\n  } catch (e) {\r\n    window.alert(\"Please Enter a Valid City Name\");\r\n    dispatch({ type: \"FETCH_WEATHER_DATA\", payload: {} });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/weather.css\";\r\n\r\nclass Weather extends Component {\r\n  displayData = () => {\r\n    const { weatherData } = this.props;\r\n    if (\r\n      Object.keys(weatherData).length === 0 &&\r\n      weatherData.constructor === Object\r\n    ) {\r\n      return (\r\n        <h1 className='Weather-notification badge badge-dark py-3'>\r\n          <i className='fas fa-cloud-moon'></i>\r\n          {\"    \"}Enter Your City Name{\"    \"}\r\n          <i className='fas fa-cloud-sun-rain'></i>\r\n        </h1>\r\n      );\r\n    }\r\n    const iconurl = `https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`;\r\n    return (\r\n      <div className='Weather'>\r\n        <div>\r\n          <p className='display-4'>{weatherData.name}</p>\r\n        </div>\r\n        <div>\r\n          <img\r\n            src={iconurl}\r\n            className='Weather-icon'\r\n            alt={weatherData.weather[0].main}\r\n          />\r\n        </div>\r\n        <div>\r\n          <p className='display-2'>{weatherData.main.temp}&#x2103; </p>\r\n        </div>\r\n        <div>\r\n          <p className='display-3'>{weatherData.weather[0].description}</p>\r\n        </div>\r\n        <div className='Weather-data'>\r\n          <div>\r\n            <p> Humidity: {weatherData.main.humidity}%</p>\r\n            <p>Speed: {weatherData.wind.speed}m/s</p>\r\n          </div>\r\n          <div>\r\n            <p> Pressure: {weatherData.main.pressure}hPa</p>\r\n            <p>Deg: {weatherData.wind.deg}&#176;</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.displayData()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToprops = (state, props) => {\r\n  return {\r\n    weatherData: state.weatherData,\r\n  };\r\n};\r\nexport default connect(mapStateToprops)(Weather);\r\n","import React from \"react\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport Weather from \"./Weather\";\r\nimport \"../styles/App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='jumbotron App'>\r\n      <SearchBox />\r\n      <Weather />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/index.css\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}